apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app pgadmin
  namespace: utilities
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.2.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    defaultPodOptions:
      securityContext:
        runAsUser: 5050
        runAsGroup: 5050
        fsGroup: 5050
        fsGroupChangePolicy: OnRootMismatch
      nodeSelector:
        node-role.kubernetes.io/worker: 'true'
    controllers:
      main:
        containers:
          main:
            image:
              repository: docker.io/dpage/pgadmin4
              tag: latest
              pullPolicy: Always
            envFrom:
              - configMapRef:
                  name: pgadmin
            env:
              TZ: ${TIMEZONE}
            probes:
              liveness: &probes
                enabled: false
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: &port 80
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
    service:
      main:
        ports:
          http:
            port: *port
        type: LoadBalancer
    ingress:
      main:
        enabled: true
        annotations:
          hajimari.io/enable: 'true'
          hajimari.io/icon: database-cog-outline
          hajimari.io/appName: PG Admin 4
          hajimari.io/group: Utilities
          cert-manager.io/cluster-issuer: letsencrypt-production
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: networking-chain-authelia@kubernetescrd
        hosts:
          - host: &uri pgadmin.${SECRET_DEV_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *uri
            secretName: *uri
        className: traefik
    persistence:
      #      config:
      #        enabled: true
      #        existingClaim: pgadmin-config
      #        globalMounts:
      #          - path: /var/lib/pgadmin
      server-json:
        enabled: true
        type: configMap
        name: servers-json
        globalMounts:
          - path: /pgadmin4/servers.json
            subPath: servers.json
      config-local-py:
        enabled: true
        type: configMap
        name: config-local-py
        globalMounts:
          - path: /pgadmin4/config_local.py
            subPath: config_local.py
    podAnnotations:
      configmap.reloader.stakater.com/reload: *app
