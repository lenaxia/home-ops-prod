apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &appname hercules-classic
  namespace: home
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      interval: 16m
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  # See https://github.com/bjw-s/helm-charts/blob/main/charts/library/common/values.yaml
  values:
    image:
      repository: ghcr.io/lenaxia/hercules
      tag: classic-20190605

    podAnnotations:
      secret.reloader.stakater.com/reload: *appname

    env:
      - name: MYSQL_HOST
        valueFrom:
          secretKeyRef:
            name: mariadb-secret
            key: ip
      - name: MYSQL_PORT
        valueFrom:
          secretKeyRef:
            name: mariadb-secret
            key: port

    envFrom:
      - secretRef:
          name: *appname 

# ...
    initContainers:
      prep-db:
        image: ubuntu:latest  # use an image with curl
        command: ["/bin/sh", "-c"]
        args:
          - |
            apt-get update && apt-get install -y curl &&
            curl https://s3.thekao.cloud/public/ragnarok/ro-herc-classic-sql.tar.gz -o sql-files.tar.gz &&
            tar -xzf sql-files.tar.gz -C /docker-entrypoint-initdb.d/ &&
            rm sql-files.tar.gz
            ls -la /docker-entrypoint-initdb.d
        volumeMounts:
          - name: db-scripts
            mountPath: /docker-entrypoint-initdb.d
      init-db:
        image: mariadb:11.0
          #        command: ["sh", "-c"]
          #        args:
          #          - |
          #            /entrypoint.sh
        env:
          - name: INIT_MYSQL_HOST
            valueFrom:
              secretKeyRef:
                name: mariadb-secret
                key: host
          - name: INIT_MYSQL_SUPER_PASS
            valueFrom:
              secretKeyRef:
                name: mariadb-secret
                key: mariadb-root-password
          - name: INIT_MYSQL_USER
            valueFrom:
              secretKeyRef:
                name: *appname
                key: MYSQL_USERNAME
          - name: INIT_MYSQL_PASS
            valueFrom:
              secretKeyRef:
                name: *appname
                key: MYSQL_PASSWORD
          - name: INIT_MYSQL_DBNAME
            valueFrom:
              secretKeyRef:
                name: *appname
                key: MYSQL_DATABASE
        volumeMounts:
          - name: db-scripts
            mountPath: /db-scripts
          - name: entrypoint-sh
            mountPath: /entrypoint.sh
            subPath: entrypoint.sh
# ...


    persistence:
      config:
        enabled: true
        accessMode: ReadWriteOnce
        existingClaim: hercules-classic-volume
      db-scripts:
        enabled: true
        type: pvc
        storageClass: longhorn
        size: 1Gi
        accessMode: ReadWriteMany 
      entrypoint-sh:
        enabled: true
        type: configMap
        name: entrypoint-sh
        subPath: entrypoint.sh
        mountPath: /entrypoint.sh
        defaultMode: 0777

    # -- Configures service settings for the chart.
    # @default -- See values.yaml
    service:
      main:
        type: LoadBalancer
        loadBalancerIP: "${SVC_HERCULES_CLASSIC_ADDR}"
        externalTrafficPolicy: Local
        ports:
          http:
            port: 6900
            targetPort: 6900
          char:
            port: 6121
            targetPort: 6121
          map:
            port: 5121
            targetPort: 5121

              #    ingress:
              #      main:
              #        enabled: true
              #        annotations:
              #          cert-manager.io/cluster-issuer: "letsencrypt-production"
              #          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
              #          traefik.ingress.kubernetes.io/router.middlewares: networking-chain-authelia@kubernetescrd
              #        hosts:
              #        - host: &uri ro-login-classic.${SECRET_DEV_DOMAIN}
              #          paths:
              #          - path: /
              #            pathType: Prefix
              #        tls:
              #        - hosts:
              #            - *uri
              #          secretName: *uri

    nodeSelector:
      node-role.kubernetes.io/worker: "true"
