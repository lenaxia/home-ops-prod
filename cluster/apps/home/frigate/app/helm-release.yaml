---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: frigate
  namespace: home
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: intel-device-plugin-gpu
      namespace: kube-system
    - name: mosquitto
      namespace: home
    - name: longhorn
      namespace: longhorn-system
  values:
    controller:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: "true"
    image:
      repository: ghcr.io/blakeblackshear/frigate
      tag: 0.12.1
    env:
      TZ: ${TIMEZONE}
      LIBVA_DRIVER_NAME: i965
    envFrom:
      - secretRef:
          name: frigate-secret
    service:
      main:
        ports:
          http:
            port: &port 5000
          rtsp:
            enabled: true
            port: 8554
    probes:
      liveness: &probes
        enabled: true
        custom: true
        spec:
          httpGet:
            path: /api/version
            port: *port
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
      readiness: *probes
      startup:
        enabled: false
    ingress:
      main:
        enabled: true
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: baby-bottle-outline
          hajimari.io/info: "Baby Buddy"
          hajimari.io/group: "Home"
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: networking-chain-authelia@kubernetescrd
        hosts:
        - host: &uri frigate.${SECRET_DEV_DOMAIN}
          paths:
          - path: /
            pathType: Prefix
        tls:
        - hosts:
            - *uri
          secretName: *uri
    securityContext:
      privileged: true
    volumeClaimTemplates:
      - name: config
        mountPath: /data
        accessMode: ReadWriteOnce
        size: 5Gi
        storageClass: longhorn
    persistence:
      config-file:
        enabled: true
        type: configMap
        name: frigate-configmap
        subPath: config.yml
        mountPath: /config/config.yml
        readOnly: true
      media:
        enabled: true
        existingClaim: frigate
        mountPath: /media
      cache:
        enabled: true
        type: emptyDir
        medium: Memory
        sizeLimit: 4Gi
        mountPath: /dev/shm
      pci:
        enabled: true
        type: hostPath
        hostPath: /dev/apex_0
        hostPathType: CharDevice
    nodeSelector:
      google.feature.node.kubernetes.io/coral: "true"
      intel.feature.node.kubernetes.io/gpu: "true"
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values: ["plex"]
            topologyKey: kubernetes.io/hostname
    resources:
      requests:
        cpu: 10m
        memory: 1000Mi
        gpu.intel.com/i915: "1"
      limits:
        memory: 6000Mi
        gpu.intel.com/i915: "1"
