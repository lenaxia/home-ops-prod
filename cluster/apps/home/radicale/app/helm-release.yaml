---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &appname radicale
  namespace: &namespace home
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    controllers:
      radicale:
        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
        containers:
          main:
            image:
              repository: tomsquest/docker-radicale
              tag: 3.3.1.1
            resources:
              requests:
                cpu: 15m
                memory: 105Mi
              limits:
                memory: 105Mi
            probes:
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
              liveness:
                enabled: true
              readiness:
                enabled: true
            env:
              RADICALE_CONFIG: /config/config
    service:
      main:
        controller: radicale
        ports:
          http:
            port: 5232
        type: LoadBalancer
    ingress:
      main:
        enabled: true
        annotations:
          hajimari.io/enable: 'true'
          hajimari.io/icon: calendar
          hajimari.io/appName: CalDav
          hajimari.io/group: *namespace
          cert-manager.io/cluster-issuer: letsencrypt-production
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: networking-chain-ldapauth@kubernetescrd
        hosts:
          #- host: &uri cal.${SECRET_DEV_DOMAIN}
          - host: &uri cal.thekao.cloud
            paths:
            - path: /
              pathType: Prefix
              service:
                identifier: main
                port: http
        tls:
          - hosts:
              - *uri
            secretName: *uri
        className: traefik
    configMaps:
      config:
        enabled: true
        data:
          config.cfg: |
            [server]
            hosts = 0.0.0.0:5232

            [auth]
            type = http_x_remote_user

            [storage]
            filesystem_folder = /data/collections
    persistence:
      data:
        enabled: true
        type: persistentVolumeClaim
        storageClass: longhorn
        accessMode: ReadWriteOnce
        size: 1Gi
        retain: true
        globalMounts:
          - path: /data
      config:
        enabled: true
        type: configMap
        name: radicale-config
        globalMounts:
          - path: /config/config
            subPath: config.cfg
            readOnly: true
      #secret:
      #  enabled: true
      #  type: secret
      #  name: *appname
      #  globalMounts:
      #    - path: /config/secret
