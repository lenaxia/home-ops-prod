# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &appname memgpt
  namespace: &namespace home
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    defaultPodOptions:
      nodeSelector:
        node-role.kubernetes.io/worker: 'true'
    controllers:
      main:
        replicas: 1  
        strategy: RollingUpdate
        type: deployment
        annotations:
          reloader.stakater.com/auto: 'true'
        containers:
          main:
            image:
              repository: memgpt/memgpt-server
              tag: latest
            envFrom:
              - secretRef:
                  name: memgpt
            env:
              DEBUG: true
              MEMGPT_PG_HOST: localhost
              MEMGPT_PG_PORT: 5432
                MEMGPT_ENVIRONMENT: DEVELOPMENT
          vectordb:
            image: 
              repository: ankane/pgvector
              tag: v0.5.1
            envFrom:
              - secretRef: 
                  name: memgpt
            env:
              PGDATA: /var/lib/postgresql/data/pgdata
          sidecar-debug:
            image:
              repository: postgres
              tag: latest
            command: ["sleep"]
            args: ["infinity"]
    persistence:
      config:
        enabled: true
        type: persistentVolumeClaim
        storageClass: longhorn
        accessMode: ReadWriteOnce
        size: 1Gi
        globalMounts: 
          - path: /root/.memgpt
      pgdata:
        enabled: true
        type: persistentVolumeClaim
        storageClass: longhorn
        accessMode: ReadWriteOnce
        size: 10Gi
        globalMounts:
          - path: /var/lib/postgresql/data
      init-sql:
        enabled: true
        type: configMap
        name: memgpt-configmap
        advancedMounts:
          main:
            vectordb:
              - path: /docker-entrypoint-initdb.d/init.sql
                subPath: init.sql
      server-config-yaml:
        enabled: true
        type: configMap
        name: memgpt-configmap
        globalMounts:
          - path: /tmp/server_config.yaml
            subPath: localai.yaml

    service:
      main:
        type: LoadBalancer
        ports:
          api:
            port: 8083
          admin:
            port: 8283
        primary: true
        controller: main
    ingress:
      main:
        enabled: true
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: networking-chain-authelia@kubernetescrd
        hosts:
          - host: memgpt.${SECRET_DEV_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: main
                  port: api
              - path: /admin
                pathType: Prefix
                service:

                  identifier: main
                  port: admin
        tls:
          - hosts:
              - memgpt.${SECRET_DEV_DOMAIN}
            secretName: memgpt.${SECRET_DEV_DOMAIN}-tls
