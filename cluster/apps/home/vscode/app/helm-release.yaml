apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &appname vscode
  namespace: home
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      interval: 16m
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  # See https://github.com/bjw-s/helm-charts/blob/main/charts/library/common/values.yaml
  values:
    image:
      repository: lscr.io/linuxserver/code-server
      tag: 4.13.0-ls163

    podAnnotations:
      secret.reloader.stakater.com/reload: *appname

    lifecycle:
      postStart:
        exec:
          command:
            - /bin/bash
            - -c
            - >
              apt update && apt upgrade -y &&
              # download and install vscode extensions
              /app/code-server/lib/node /app/code-server --install-extension vscjava.vscode-java-pack --extensions-dir /config/extensions &&

              # download and install JVM
              wget https://github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.7%2B7/OpenJDK17U-jdk_x64_linux_hotspot_17.0.7_7.tar.gz \
              -O /config/OpenJDK17U-jdk_x64_linux_hotspot_17.0.7_7.tar.gz &&
              tar -xzvf OpenJDK17U-jdk_x64_linux_hotspot_17.0.7_7.tar.gz -C /usr/lib/jvm &&
              echo 'export JAVA_HOME=/usr/lib/jvm/jdk-17.0.7+7' >> /config/.bashrc &&
              echo 'export PATH=$PATH:$JAVA_HOME/bin' >> /config/.bashrc &&

              # download and install neovim
              apt install neovim -y &&
              export PATH=$PATH:/usr/local/go/bin:/usr/local/bin/nvim &&
              echo "export PATH=$PATH:/usr/local/go/bin:/usr/local/bin/nvim" >> /config/.bashrc &&

              # download and install Golang binaries
              curl https://dl.google.com/go/go1.20.5.linux-amd64.tar.gz --output /config/go1.20.5.linux-amd64.tar.gz &&
              tar -C /usr/local -xzf /config/go1.20.5.linux-amd64.tar.gz && 
              go install -v github.com/cweill/gotests/gotests@v1.6.0 && 
              go install -v github.com/fatih/gomodifytags@v1.16.0 &&
              go install -v github.com/josharian/impl@v1.1.0 &&
              go install -v github.com/haya14busa/goplay/cmd/goplay@v1.0.0 &&
              go install -v github.com/go-delve/delve/cmd/dlv@latest &&
              go install -v honnef.co/go/tools/cmd/staticcheck@latest &&
              go install -v golang.org/x/tools/gopls@latest

    env:
      TZ: ${TIMEZONE}
      PGID: 1000
      PUID: 1000

    envFrom:
      - secretRef:
          name: *appname

    persistence:
      config:
        enabled: true
        existingClaim: vscode-nfs

    # -- Configures service settings for the chart.
    # @default -- See values.yaml
    service:
      main:
        ports:
          http:
            port: 80
            targetPort: 8443
          ssh:
            port: 22
            targetPort: 228443
        type: LoadBalancer

    ingress:
      main:
        enabled: true
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: cib:visual-studio-code
          hajimari.io/info: "Visual Sudio Code"
          hajimari.io/group: "Home"
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: networking-chain-authelia@kubernetescrd
        hosts:
        - host: &uri code.${SECRET_DEV_DOMAIN}
          paths:
          - path: /
            pathType: Prefix
        tls:
        - hosts:
            - *uri
          secretName: *uri
    nodeSelector:
      node-role.kubernetes.io/worker: "true"
