apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app cloudflared
  namespace: networking
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    defaultPodOptions:
      nodeSelector:
        node-role.kubernetes.io/worker: 'true'

    # Tunnel credentials setup:
    # https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/install-and-setup/tunnel-guide/local/
    
    # Example: https://github.com/cloudflare/postgres-postgrest-cloudflared-example
    controllers:
      main:
        replicas: 1

        containers:
          main:
            image:
      # https://hub.docker.com/r/cloudflare/cloudflared
              repository: cloudflare/cloudflared
              tag: latest
            env:
              TZ: ${TIMEZONE}
    # Outbound traffic is proxied through port 8080
    # https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/install-and-setup/tunnel-useful-terms/#configuration-file
    # Arguments: https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/install-and-setup/tunnel-guide/local/local-management/arguments/#metrics
            probes:
              liveness:
                enabled: true
                custom: true
                spec:
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
                  httpGet:
                    path: /ready
                    port: 3333
                    scheme: HTTP
              readiness:
                enabled: true
                custom: true
                spec:
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
                  httpGet:
                    path: /ready
                    port: 3333
                    scheme: HTTP
              startup:
                enabled: true
                custom: true
                spec:
                  initialDelaySeconds: 0
                  timeoutSeconds: 1
                  periodSeconds: 5
                  failureThreshold: 30
                  httpGet:
                    path: /ready
                    port: 3333
                    scheme: HTTP
            args:
              - tunnel
              - --config
              - /etc/cloudflared/config.yaml
              - --metrics=0.0.0.0:3333
              - --no-autoupdate
              - run
    service:
      main:
        enabled: false
        primary: true
        controller: main
    persistence:
      config:
        enabled: true
        type: configMap
        name: &app cloudflared
        globalMounts:
          - path: /etc/cloudflared/config.yaml
            subPath: config.yaml
      tunnel:
        enabled: true
        type: secret
        name: *app
        globalMounts:
          - path: /etc/cloudflared/tunnel.json
            subPath: tunnel.json
    priorityClassName: system-cluster-critical
    podAnnotations:
      configmap.reloader.stakater.com/reload: *app
      secret.reloader.stakater.com/reload: *app
