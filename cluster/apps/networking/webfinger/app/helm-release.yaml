apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: webfinger
  namespace: networking
spec:
  interval: 5m
  chart:
    spec:
      name: nginx
      chart: nginx
      version: 1.21.3
      sourceRef:
        kind: HelmRepository
        name: nginx
        namespace: flux-system
      interval: 5m
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
      remediateLastFailure: true
    cleanupOnFail: true
  values:
    image:
      repository: nginx
      tag: 1.21.3
    pullPolicy: IfNotPresent
    replicaCount: 1
    updateStrategy:
      type: RollingUpdate
      rollingUpdate: {}
    serverBlockConfig: |-
      server {
        listen 80;

        # Allow access to .well-known explicitly
        location ^~ /.well-known/ {
            allow all;
        }

        location = /.well-known/webfinger {
            alias /app/.well-known/webfinger/webfinger.json;
            add_header Content-Type application/json;
        }

        error_log /app/error.log debug;
      }

    configMapName: webfinger-json
    configMapMountPath: /app/.well-known/webfinger
    extraVolumeMounts:
      - name: protect-hidden-files-conf
        mountPath: /etc/nginx/conf.d/protect-hidden-files.conf
        subPath: protect-hidden-files.conf
    extraVolumes:
      - name: protect-hidden-files-conf
        configMap:
          name: protect-hidden-files-conf

    livenessProbe:
      enabled: true
      initialDelaySeconds: 60
      timeoutSeconds: 5
      periodSeconds: 10
      failureThreshold: 6
      successThreshold: 1
    readinessProbe:
      enabled: true
      initialDelaySeconds: 60
      timeoutSeconds: 3
      periodSeconds: 5
      failureThreshold: 3
      successThreshold: 1

    service:
      ports:
        http: &port 80
      type: LoadBalancer
      main:
        ports:
          http:
            port: *port

    ingress:
      enabled: true
      hostname: &uri "${SECRET_DEV_DOMAIN}"
      path: /
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt-production"
        traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
        traefik.ingress.kubernetes.io/router.middlewares: networking-chain-authelia@kubernetescrd
      ingressClassName: "traefik"
      tls: true

    resources:
      requests:
        cpu: 15m
        memory: 79M
      limits:
        cpu: 15m
        memory: 79M
