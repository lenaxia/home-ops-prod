apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app minio
  namespace: storage
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    defaultPodOptions:
      securityContext:
        runAsUser: 0
        runAsGroup: 0
        fsGroup: 0
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups:
          - 100
      nodeSelector:
        node-role.kubernetes.io/worker: 'true'
    controllers:
      main:
        containers:
          main:
            image:
              repository: docker.io/minio/minio
              tag: RELEASE.2025-02-28T09-55-16Z
              pullPolicy: Always
            envFrom:
              - secretRef:
                  name: &app minio
            env:
              TZ: ${TIMEZONE}
              MINIO_UPDATE: off
              MINIO_PROMETHEUS_URL: http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090
              MINIO_PROMETHEUS_JOB_ID: minio
              MINIO_BROWSER_REDIRECT_URL: https://minio.${SECRET_DEV_DOMAIN}
              MINIO_SERVER_URL: https://s3.${SECRET_DEV_DOMAIN}
            resources:
              requests:
                memory: 100Mi
                cpu: 100m
              limits:
                memory: 750Mi
            args: ["server", "/data", "--console-address", ":9001"]
    service:
      main:
        enabled: true
        ports:
          http:
            port: &port-console 9001
          api:
            port: &port-api 9000
            enabled: true
        primary: true
        controller: main
    ingress:
      main:
        enabled: true
        annotations:
          hajimari.io/enable: 'true'
          hajimari.io/icon: cloud-upload
          hajimari.io/group: Storage
          cert-manager.io/cluster-issuer: letsencrypt-production
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: networking-chain-authelia-minio@kubernetescrd
        hosts:
          - host: &host-console '{{ .Release.Name }}.${SECRET_DEV_DOMAIN}'
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: main
                  port: http
          - host: &host-api s3.${SECRET_DEV_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: main
                  port: *port-api
        tls:
          - hosts:
              - *host-console
              - *host-api
            secretName: *host-api
        className: traefik
    persistence:
      config:
        enabled: true
        existingClaim: minio-nfs
        globalMounts:
          - path: /data
        type: persistentVolumeClaim
#    serviceMonitor:
#      main:
#        enabled: true
#        endpoints:
#          - port: api
#            scheme: http
#            path: /minio/v2/metrics/cluster
#            interval: 1m
#            scrapeTimeout: 10s
#            bearerTokenSecret:
#              name: minio-secret
#              key: MINIO_PROMETHEUS_TOKEN
    podAnnotations:
      secret.reloader.stakater.com/reload: *app
