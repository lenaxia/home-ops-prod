---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &appname influxdb
  namespace: databases
spec:
  interval: 5m
  chart:
    spec:
      chart: influxdb2
      version: 2.1.2
      sourceRef:
        kind: HelmRepository
        name: influxdata-charts
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 4
  upgrade:
    remediation:
      retries: 3
  values:
    adminUser:
      organization: "kaocloud"
      bucket: "default"
      user: "admin"
      retention_policy: "30d"
      existingSecret: influxdb-auth

    initScripts:
      enabled: true
      scripts:
        init.sh: |+
          #!/bin/bash
          # Wait for InfluxDB to be ready
          while ! influx ping &> /dev/null; do
              echo "Waiting for InfluxDB..."
              sleep 1
          done
          
          echo "InfluxDB is up and running!" 

          # Variables for InfluxDB
          ORG_NAME="${INFLUXDB_ORG}"
          BUCKET_NAME="telegraf"
          INFLUX_TOKEN="${INFLUXDB_ADMIN_TOKEN}"
          
          # List existing buckets and create a new one if not present
          EXISTING_BUCKETS=$(influx bucket list --org "${ORG_NAME}" --token "${INFLUX_TOKEN}" | grep -w "${BUCKET_NAME}")
          
          if [ -z "${EXISTING_BUCKETS}" ]; then
              echo "Bucket ${BUCKET_NAME} does not exist. Creating..."
              influx bucket create --name "${BUCKET_NAME}" --org "${ORG_NAME}" --retention 0 --token "${INFLUX_TOKEN}"
          else
              echo "Bucket ${BUCKET_NAME} already exists."
          fi

          BUCKET_NAME="default"

          # List existing buckets and create a new one if not present
          EXISTING_BUCKETS=$(influx bucket list --org "${ORG_NAME}" --token "${INFLUX_TOKEN}" | grep -w "${BUCKET_NAME}")

          if [ -z "${EXISTING_BUCKETS}" ]; then
              echo "Bucket ${BUCKET_NAME} does not exist. Creating..."
              influx bucket create --name "${BUCKET_NAME}" --org "${ORG_NAME}" --retention 0 --token "${INFLUX_TOKEN}"
          else
              echo "Bucket ${BUCKET_NAME} already exists."
          fi


    env:
      - name: INFLUXDB_ORG
        valueFrom:
          secretKeyRef:
            name: influxdb-auth
            key: org
      - name: INFLUXDB_ADMIN_TOKEN
        valueFrom:
          secretKeyRef:
            name: influxdb-auth
            key: admin_token


    persistence:
      enabled: true
      useExisting: true
      name: influxdb-data-volume

    service:
      type: ClusterIP
      port: 8086
      targetPort: 8086
      annotations:
        metallb.universe.tf/address-pool: dev-infra
      labels:
        app: influxdb
      portName: http

    ingress:
      enabled: true
      ingressClassName: "traefik"
      annotations: 
          hajimari.io/enable: "true"
          hajimari.io/icon: "mdiPlayNetwork"
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
      hostname: &uri influxdb.${SECRET_DEV_DOMAIN}

      tls: true
      secretName: *uri
      path: /

