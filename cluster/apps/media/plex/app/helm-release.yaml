# yaml-language-server: $schema=https://kubernetes-schemas.trux.dev/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app plex
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.0.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    defaultPodOptions:
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups:
          - 44
          - 109
          - 100
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: feature.node.kubernetes.io/custom-intel-gpu
                    operator: In
                    values:
                      - 'true'
    controllers:
      main:
        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/plex
              tag: 
                1.32.7.7621-871adbd44@sha256:f9f77dc5e17cab9fae5ece663a64d026e3c75142b3b60bb4a52bf061957412be
            env:
              TZ: ${TIMEZONE}
              PLEX_CLAIM: claim-RGPtV5WwXo9JZcoHzti2
            resources:
              requests:
                gpu.intel.com/i915: 1
                cpu: 200m
                memory: 2000Mi
              limits:
                gpu.intel.com/i915: 1
                memory: 20000Mi
    service:
      main:
        type: LoadBalancer
        externalTrafficPolicy: Local
        loadBalancerIP: ${SVC_PLEX_ADDR}
        ports:
          http:
            port: &port 32400
    ingress:
      main:
        enabled: true
        annotations:
          hajimari.io/enable: 'true'
          hajimari.io/icon: mdi:plex
          hajimari.io/group: Media
          cert-manager.io/cluster-issuer: letsencrypt-production
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: networking-chain-no-auth@kubernetescrd
        hosts:
          - host: &uri plex.${SECRET_DEV_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *uri
            secretName: *uri
        className: traefik
    persistence:
      config:
        enabled: true
        existingClaim: plex-config-volume
      omoikane:
        enabled: true
        type: nfs
        server: ${NAS_ADDR}
        path: /volume1/omoikane
        readOnly: true
        globalMounts:
          - path: /omoikane
      downloads:
        enabled: true
        type: nfs
        server: ${NAS_ADDR}
        path: /volume2/downloads
        readOnly: true
        globalMounts:
          - path: /downloads
      transcode:
        enabled: true
        type: emptyDir
