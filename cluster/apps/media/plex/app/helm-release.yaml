# yaml-language-server: $schema=https://kubernetes-schemas.trux.dev/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app plex
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    defaultPodOptions:
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups:
          - 44
          - 109
          - 100
      nodeSelector:
        node-role.kubernetes.io/worker: 'true'
    controllers:
      main:
        type: deployment
        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/plex
              tag: 
                1.41.0.8994-f2c27da23@sha256:fe9ed1189617cd98106635c63ed39d40e4ec82535514e4a51a7c72e56b65c4dd
            env:
              TZ: ${TIMEZONE}
              PLEX_CLAIM: claim-RGPtV5WwXo9JZcoHzti2
            resources:
              requests:
                gpu.intel.com/i915: 1
                cpu: 200m
                memory: 2000Mi
              limits:
                gpu.intel.com/i915: 1
                memory: 20000Mi
          sidecar-log-watcher:
            image:
              repository: curlimages/curl
              tag: latest
            command: [/bin/sh, -c]
            args:
              - |
                echo "Starting log watcher..."
                tail -F /config/Library/Application\ Support/Plex\ Media\ Server/Logs/Plex\ Media\ Server.log | while read line; do
                  echo "Read line: $line"
                  if echo "$line" | grep "database is locked"; then
                    echo "Detected 'database is locked' - initiating pod deletion"
                    curl -k -X DELETE --header "Authorization: Bearer $(cat /var/run/secrets/kubernetes.io/serviceaccount/token)" \
                    https://kubernetes.default.svc/api/v1/namespaces/$NAMESPACE/pods/$POD_NAME
                    echo "Pod deletion request sent"
                  else
                    echo "Log line does not contain target string"
                  fi
                done
            env:
              - name: POD_NAME
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.name
              - name: NAMESPACE
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.namespace
            securityContext:
              readOnlyRootFilesystem: true
              runAsNonRoot: true
    service:
      main:
        type: LoadBalancer
        externalTrafficPolicy: Local
        loadBalancerIP: ${SVC_PLEX_ADDR}
        ports:
          http:
            port: 32400
        primary: true
        controller: main
    ingress:
      main:
        className: traefik
        enabled: true
        annotations:
          hajimari.io/enable: 'true'
          hajimari.io/icon: mdi:plex
          hajimari.io/group: Media
          cert-manager.io/cluster-issuer: letsencrypt-production
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: networking-chain-no-auth@kubernetescrd
        hosts:
          - host: &uri plex.${SECRET_DEV_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: main
                  port: http
        tls:
          - hosts:
              - *uri
            secretName: *uri
    persistence:
      config:
        enabled: true
        existingClaim: plex-config-volume
        type: persistentVolumeClaim
      omoikane:
        enabled: true
        type: nfs
        server: ${NAS_ADDR}
        path: /volume1/omoikane
        globalMounts:
          - path: /omoikane
      downloads:
        enabled: true
        type: nfs
        server: ${NAS_ADDR}
        path: /volume2/downloads
        globalMounts:
          - path: /downloads
      transcode:
        enabled: true
        type: emptyDir
      scratch:
        enabled: true
        type: emptyDir
    serviceAccount:
      create: true
      name: plex-sidecar
