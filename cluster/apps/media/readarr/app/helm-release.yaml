---
# yamllint disable rule:line-length
# yaml-language-server: $schema=https://kubernetes-schemas.trux.dev/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app readarr
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.3.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    controller:
      annotations:
        reloader.stakater.com/auto: 'true'
    image:
      repository: ghcr.io/onedr0p/readarr-nightly
      tag: 0.1.6.1851@sha256:3f1ffb309013bc15c376332c95bc3754074ef29f243c24a85c79352b92ca4f80
    env:
      TZ: '${TIMEZONE}'
      READARR__INSTANCE_NAME: Readarr (Audio)
      READARR__LOG_LEVEL: info
#    envFrom:
#      - secretRef:
#          name: *app
    service:
      main:
        ports:
          http:
            port: 8787
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: "book-open"
          hajimari.io/group: "Media"
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: networking-chain-authelia@kubernetescrd
        hosts:
          - host: &uri "readarr.${SECRET_DEV_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *uri
            secretName: *uri
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: 'OnRootMismatch'
      supplementalGroups:
        - 100
    persistence:
      config:
        enabled: true
        existingClaim: readarr-config-volume
      omoikane:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: ${NAS_ADDR}
            path: /volume1/omoikane
        mountPath: /omoikane
      downloads:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: ${NAS_ADDR}
            path: /volume2/downloads
        mountPath: /downloads
      library:
        enabled: true
        existingClaim: calibre-media-volume
        namespace: media
        mountPath: /library
      backup:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: ${NAS_ADDR}
            path: /volume1/backups/readarr
        mountPath: /config/Backups
    resources:
      requests:
        cpu: 10m
        memory: 1200Mi
      limits:
        memory: 2000Mi
