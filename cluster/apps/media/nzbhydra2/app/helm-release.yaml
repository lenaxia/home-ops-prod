apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &appname nzbhydra2
  namespace: media
spec:
  releaseName: *appname
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  interval: 5m
  install:
    createNamespace: true
    remediation:
      retries: 4
  upgrade:
    remediation:
      retries: 4
  values:
    podLabels:
      app: *appname
    controller:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: "true"
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: OnRootMismatch

    image:
      repository: lscr.io/linuxserver/nzbhydra2
      tag: 5.1.10
      pullPolicy: Always
    
    env:
      TZ: ${TIMEZONE}
    
    service:
      main:
        type: ClusterIP
        ports:
          http:
            port: 5076

#    volumeClaimTemplates:
#      - name: config
#        mountPath: /config
#        accessMode: ReadWriteOnce
#        size: 1Gi
#        storageClass: longhorn 
    persistence:
      config:
        enabled: true
        existingClaim: nzbhydra2-config-volume
      omoikane:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: ${NAS_ADDR}
            path: /volume1/omoikane
        mountPath: /omoikane
      downloads:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: ${NAS_ADDR}
            path: /volume2/downloads
        mountPath: /downloads
      backup:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: ${NAS_ADDR}
            path: /volume1/backups/nzbhydra2
        mountPath: /config/backup

    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: "cloud-search"
          hajimari.io/appName: "NZBHydra"
          hajimari.io/group: "Media"
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: networking-chain-authelia@kubernetescrd
        hosts:
          - host: &uri "nzbhydra.${SECRET_DEV_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
            - *uri
            secretName: *uri
    nodeSelector:
      node-role.kubernetes.io/worker: "true"
