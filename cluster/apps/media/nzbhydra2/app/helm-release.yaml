apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &appname nzbhydra2
  namespace: media
spec:
  releaseName: *appname
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  interval: 5m
  install:
    createNamespace: true
    remediation:
      retries: 4
  upgrade:
    remediation:
      retries: 4
  values:
    defaultPodOptions:
      securityContext:
        fsGroup: 568

      nodeSelector:
        node-role.kubernetes.io/worker: 'true'
    controllers:
      main:
        type: statefulset
        annotations:
          reloader.stakater.com/auto: 'true'
        containers:
          main:
            image:
              repository: lscr.io/linuxserver/nzbhydra2
              tag: 7.10.2
              pullPolicy: Always

            env:
              TZ: ${TIMEZONE}

    service:
      main:
        type: ClusterIP
        ports:
          http:
            port: 5076
        primary: true
        controller: main
    ingress:
      main:
        enabled: true
        annotations:
          hajimari.io/enable: 'true'
          hajimari.io/icon: cloud-search
          hajimari.io/appName: NZBHydra
          hajimari.io/group: Media
          cert-manager.io/cluster-issuer: letsencrypt-production
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: networking-chain-authelia@kubernetescrd
        hosts:
          - host: &uri nzbhydra.${SECRET_DEV_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: main
                  port: http
        tls:
          - hosts:
              - *uri
            secretName: *uri
        className: traefik
    persistence:
      config:
        enabled: true
        existingClaim: nzbhydra2-config-volume
        type: persistentVolumeClaim
      omoikane:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: ${NAS_ADDR}
            path: /volume1/omoikane
        globalMounts:
          - path: /omoikane
      downloads:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: ${NAS_ADDR}
            path: /volume2/downloads
        globalMounts:
          - path: /downloads
      backup:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: ${NAS_ADDR}
            path: ${NFS_NZBHYDRA}
        globalMounts:
          - path: /config/backup
    podLabels:
      app: &appname nzbhydra2
