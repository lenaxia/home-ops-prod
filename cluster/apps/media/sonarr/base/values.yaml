# yamllint disable rule:line-length
defaultPodOptions:
  securityContext:
    runAsUser: 568
    runAsGroup: 568
    fsGroup: 568
    fsGroupChangePolicy: OnRootMismatch
  nodeSelector:
    node-role.kubernetes.io/worker: 'true'
controllers:
  main:
    type: statefulset
    annotations:
      reloader.stakater.com/auto: 'true'
    containers:
      main:
        image:
          repository: ghcr.io/onedr0p/sonarr-develop
          tag: 4.0.11.2743@sha256:7227b81844d1aa6cb8242b325eb30f9113d10c2fc446db4ca7207c892e49e72b
          pullPolicy: Always
        env:
          TZ: ${TIMEZONE}
    statefulset:
      volumeClaimTemplates:
        - name: config
          accessMode: ReadWriteOnce
          size: 4Gi
          storageClass: longhorn
          globalMounts:
            - path: /config
service:
  main:
    ports:
      http:
        port: 8989
    type: ClusterIP
    controller: main
ingress:
  main:
    enabled: true
    annotations:
      hajimari.io/enable: 'true'
      hajimari.io/icon: television-box
      hajimari.io/group: Media
      cert-manager.io/cluster-issuer: letsencrypt-production
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
      traefik.ingress.kubernetes.io/router.middlewares: networking-chain-authelia@kubernetescrd
    className: traefik
persistence:
  omoikane:
    enabled: true
    type: custom
    volumeSpec:
      nfs:
        server: ${NAS_ADDR}
        path: /volume1/omoikane
    globalMounts:
      - path: /omoikane
  backups:
    enabled: true
    type: custom
    volumeSpec:
      nfs:
        server: ${NAS_ADDR}
        path: ${NFS_ARR}
    globalMounts:
      - path: /config/Backups
  downloads:
    enabled: true
    type: custom
    volumeSpec:
      nfs:
        server: ${NAS_ADDR}
        path: /volume2/downloads
    globalMounts:
      - path: /downloads
