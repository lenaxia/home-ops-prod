# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: jellyfin
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    defaultPodOptions:
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [44, 109, 10000]
      nodeSelector:
        node-role.kubernetes.io/worker: 'true'
        intel.feature.node.kubernetes.io/gpu: 'true'
    controllers:
      main:
        type: statefulset
        containers:
          main:
            image:
              repository: jellyfin/jellyfin
              tag: 10.9.7@sha256:76930362d2c266e8f0b2f51f1c6b039a5207525d0e138a1cdbec870c66c34b0f
            env:
              TZ: America/Los_Angeles
              PGID: 1000
              PUID: 1000
            resources:
              requests:
                gpu.intel.com/i915: 1
                cpu: 100m
                memory: 1000Mi
              limits:
                gpu.intel.com/i915: 1
                memory: 6000Mi
        statefulset:
          volumeClaimTemplates:
            - name: config
              accessMode: ReadWriteOnce
              size: 50Gi
              storageClass: longhorn
              labels:
                snapshot.home.arpa/enabled: 'true'
              globalMounts:
                - path: /config
    service:
      main:
        type: LoadBalancer
          #externalIPs: ['${SVC_JELLYFIN_ADDR}']
        externalTrafficPolicy: Local
        ports:
          http:
            port: 8096
        primary: true
        controller: main
    ingress:
      main:
        enabled: true
        annotations:
          hajimari.io/enable: 'true'
          hajimari.io/icon: simple-icons:jellyfin
          hajimari.io/group: Media
          cert-manager.io/cluster-issuer: letsencrypt-production
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: networking-chain-authelia@kubernetescrd
        hosts:
          - host: &uri jelly.${SECRET_DEV_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: main
                  port: http
        tls:
          - hosts:
              - *uri
            secretName: *uri
        className: traefik
    persistence:
      omoikane:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: ${NAS_ADDR}
            path: /volume1/omoikane
        globalMounts:
          - path: /omoikane
      downloads:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: ${NAS_ADDR}
            path: /volume2/downloads
        globalMounts:
          - path: /downloads
      transcode:
        enabled: true
        type: emptyDir
