apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app outline
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 4
  upgrade:
    remediation:
      retries: 5
        #  dependsOn:
        #    - name: postgres-operator 
        #      namespace: databases
        #    - name: redis
        #      namespace: databases
  values:
    defaultPodOptions:
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: &app outline
      nodeSelector:
        node-role.kubernetes.io/worker: 'true'
    controllers:
      main:
        replicas: 3
        strategy: RollingUpdate
        type: statefulset
        annotations:
          reloader.stakater.com/auto: 'true'
        containers:
          main:
            image:
              repository: docker.io/outlinewiki/outline
              tag: 0.75.2
              pullPolicy: Always
            envFrom:
              - secretRef:
                  name: *app
            resources:
              requests:
                cpu: 10m
                memory: 50Mi
              limits:
                memory: 500Mi

            command: [/bin/sh, -c, yarn db:migrate --env=production-ssl-disabled &&
                  yarn start --env=production-ssl-disabled]
    service:
      main:
        type: ClusterIP
        ports:
          http:
            port: 3000
    ingress:
      main:
        enabled: true
        annotations:
          hajimari.io/enable: 'true'
          hajimari.io/icon: wikipedia
          hajimari.io/appName: Outline
          hajimari.io/group: Media
          cert-manager.io/cluster-issuer: letsencrypt-production
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: networking-chain-authelia@kubernetescrd
        hosts:
          - host: &uri w.${SECRET_DEV_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *uri
            secretName: *uri
        className: traefik
    podAnnotations:
      secret.reloader.stakater.com/reload: *app
